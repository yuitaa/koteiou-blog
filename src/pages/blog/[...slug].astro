---
import { getCollection } from 'astro:content';
import PageLayout from '@/layouts/PageLayout.astro';
import { Image } from 'astro:assets';
import ArticlePagination from '@/components/ArticlePagination.astro';

// This function is required for Astro to generate the pages at build time.
export async function getStaticPaths() {
  const posts = (await getCollection('blog'))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
  return posts.map((post, i) => ({
    params: { slug: post.slug },
    props: {
      post,
      previousPost: i + 1 === posts.length ? null : posts[i + 1],
      nextPost: i === 0 ? null : posts[i - 1],
    },
  }));
}

const { post, previousPost, nextPost } = Astro.props;
const { Content } = await post.render();

const description =
  post?.body
    ?.replace(/^import.*$/gm, '')
    .replace(/(\r\n|\n|\r)/gm, '')
    .slice(0, 240) + '...';
---

<PageLayout
  title={post.data.title}
  description={description}
  image={post.data.image && post.data.image}
  bigImage={post.data.image ? true : false}>
  {
    post.data.image && (
      <Image
        src={post.data.image}
        alt={post.data.title}
        width={1280}
        height={720}
        class:list={['mb-4']}
      />
    )
  }

  <h1 class="util-heading text-3xl">
    {post.data.title}
  </h1>

  <p class="text-text-secondary my-2 text-sm">
    {
      post.data.pubDate.toLocaleDateString('ja-JP', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit',
      })
    }
  </p>

  {
    post.data.tags && post.data.tags.length > 0 && (
      <div class="my-2 flex flex-wrap gap-1">
        {post.data?.tags?.map((tag) => (
          <div class="bg-background-surface px-2 text-sm hover:underline">
            <a href={`/tags/${decodeURIComponent(tag.toLocaleLowerCase())}`}>
              #{tag}
            </a>
          </div>
        ))}
      </div>
    )
  }

  <article class="markdown">
    <div class="break-words">
      <Content />
    </div>
  </article>
  <section class="my-2">
    <ArticlePagination
      previous={{
        title: previousPost?.data.title || null,
        link: `/blog/${previousPost?.slug}`,
      }}
      ,
      next={{
        title: nextPost?.data.title || null,
        link: `/blog/${nextPost?.slug}`,
      }}
    />
  </section>
</PageLayout>
